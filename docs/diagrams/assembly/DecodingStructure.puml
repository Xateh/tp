@startuml
skinparam style strictuml
skinparam classAttributeIconSize 0
hide empty members
!define INTERFACE interface

class Decoder {
    + {static} decode(BareCommand): Command
}

abstract class Command {
    + execute(): CommandResult
}

class BareCommand {
}

package "Resolution" {
    enum Bindings {
    }
}

package "Validation" {
    INTERFACE "CommandExtractor<T>" as CommandExtractor {
        + extract(BareCommand): T
    }
}

' Relationships - Core Decoding Flow
Decoder ..> Bindings : uses
Decoder ..> BareCommand : accepts
Decoder ..> Command : returns

Bindings --> CommandExtractor : contains

CommandExtractor ..> BareCommand : accepts
CommandExtractor ..> Command : returns

' Notes
note right of Bindings
Registry mapping imperatives
to their extractors.
Add new commands here.
end note

note right of CommandExtractor
Functional interface for
command-specific extraction
and validation logic.
end note

@enduml
